#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --time --weight=1

# Needed for helper "ynh_add_nginx_config"
final_path=$(ynh_app_setting_get --app=$app --key=final_path)


#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
  change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
  change_path=1
fi

#=================================================
# MODIFY URL IN NGINX CONF
#=================================================
ynh_script_progression --message="Updating nginx web server configuration..." --time --weight=1

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

## Move from sub path to root
#if [ "$new_path" == "/" ]
#then
#  ynh_replace_string "\(^.*rewrite.*\^$old_path.* permanent;\)" "#sub_path_only\1" "$nginx_conf_path"
#  ynh_replace_string "\(rewrite *\^\)$old_path\$ $old_path/*" "\1$new_path$ $new_path" "$nginx_conf_path"

# Move to a sub path
#else
#  ynh_replace_string "^#sub_path_only" "" "$nginx_conf_path"
#  ynh_replace_string "\(rewrite *\^\)$old_path\$ $old_path/*" "\1$new_path$ $new_path/" "$nginx_conf_path"
#fi

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
  # Make a backup of the original nginx config file if modified
  ynh_backup_if_checksum_is_different --file="$nginx_conf_path"
  # Set global variables for nginx helper
  domain="$old_domain"
  path_url="$new_path"
  # Create a dedicated nginx config
  ynh_add_nginx_config
fi


# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
  # Delete file checksum for the old conf file location
  ynh_delete_file_checksum --file="$nginx_conf_path"
  mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
  # Store file checksum for the new config file location
  ynh_store_file_checksum --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi



#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Change of URL completed for $app" --time --last

