#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# Retrieve arguments
app=$YNH_APP_INSTANCE_NAME
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

# Source YunoHost helpers
source /usr/share/yunohost/helpers

#Â Save app settings
ynh_app_setting_set "$app" is_public "$is_public"

# Check domain/path availability
yunohost app checkurl "${domain}${path}" -a "$app" \
    || ynh_die "Path not available: ${domain}${path}"

# Retrieve sources and install them
src_path=/var/www/$app
mkdir -p $src_path
	# Download, check integrity, uncompress and patch the source from app.src
  ynh_script_progression --message="Setting up source files..." --time --weight=1
	ynh_setup_source --dest_dir=$src_path
chown -R www-data: $src_path

# Modify Nginx configuration file and copy it to Nginx conf directory
nginx_conf=../conf/nginx.conf
sed -i "s@YNH_WWW_PATH@$path@g" $nginx_conf
sed -i "s@YNH_WWW_ALIAS@$src_path/@g" $nginx_conf
cp $nginx_conf /etc/nginx/conf.d/$domain.d/$app.conf

# If app is public, add url to SSOWat conf as skipped_uris
if [[ $is_public -eq 1 ]]; then
  # unprotected_uris allows SSO credentials to be passed anyway.
  ynh_app_setting_set "$app" unprotected_uris "/"
# activate read-only
  ynh_replace_string --match_string='"readonly": false,' --replace_string='"readonly": true,' --target_file="$src_path/config.js"
fi

# Reload nginx service
systemctl reload nginx
